/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Customer;

import Model.Cart;
import Model.Customer;
import Model.FragileProduct;
import Model.Inventory;
import Model.NonFragileProduct;
import Model.OrderItem;
import Model.Product;
import Model.ProductInventoryLoader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ht-19
 */
public class ProductCatalogView extends javax.swing.JFrame {
    Customer customer;
    DefaultTableModel model;
    Cart cart;
    /**
     * Creates new form ProductCatalogView
     */
    
    public ProductCatalogView(){
        initComponents();
        loadTable();
    }
    
    public ProductCatalogView(Customer customer, Cart cart) {
        this.cart = cart;
        this.customer = customer;
        initComponents();
        loadTable();
    }
    
    public ProductCatalogView(Customer customer){
        this.customer = customer;
        initComponents();
        loadTable();
    }
    
    private void loadTable(){
        model = new javax.swing.table.DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column){
               return false;
            }
        };
                
        ProductInventoryLoader p = new ProductInventoryLoader();
        ArrayList<Inventory> inventoryArrayList = p.load();
        model.addColumn("Product ID");
        model.addColumn("Product");
        model.addColumn("Price (RM)");
        model.addColumn("Type");
        model.addColumn("Stock"); 
        for(int i = 0; i < inventoryArrayList.size(); i++){
            String productId = inventoryArrayList.get(i).getProduct().getProductId();
            String productName = inventoryArrayList.get(i).getProduct().getProductName();
            String price = Double.toString(inventoryArrayList.get(i).getProduct().getPrice());
            String type = "";
            if(inventoryArrayList.get(i).getProduct().toString().equals("N")){
                type = "Non-Fragile";
            }else if(inventoryArrayList.get(i).getProduct().toString().equals("F")){
                type = "Fragile";
            }
            String quantity = Integer.toString(inventoryArrayList.get(i).getQuantity());
            Object[] data = {productId, productName, price, type, quantity};
            model.addRow(data);
        }
        tblProduct.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        btnViewCart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnMenu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Product Catalog");

        btnAddToCart.setText("Add To Cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        btnViewCart.setText("View Cart");
        btnViewCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCartActionPerformed(evt);
            }
        });

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ProductId", "Name", "Price", "Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        btnMenu.setText("Menu");
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(btnMenu))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAddToCart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnViewCart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(236, 236, 236)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddToCart)
                        .addGap(18, 18, 18)
                        .addComponent(btnViewCart)
                        .addGap(153, 153, 153)
                        .addComponent(btnMenu)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCartActionPerformed
        // TODO add your handling code here:
        if(cart != null){
            this.dispose();
            CartView form = new CartView(customer, cart);
            form.setVisible(true);
        }else{
            this.dispose();
            CartView form = new CartView(customer);
            form.setVisible(true);
        }
        
    }//GEN-LAST:event_btnViewCartActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // TODO add your handling code here:
         if(cart == null){
            MenuView form = new MenuView(customer);
            this.dispose();
            form.setVisible(true);
        }else{
            MenuView form = new MenuView(customer, cart);
            this.dispose();
            form.setVisible(true);
        }
        
    }//GEN-LAST:event_btnMenuActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        
        if(tblProduct.getSelectedRow()== -1){
            JOptionPane.showMessageDialog(this, "Please select a product!");
            return;
        }
        
        String strQuantity = JOptionPane.showInputDialog(this, "Quantity:");
        if(strQuantity != null){
            int quantity;
            try{
                quantity = Integer.parseInt(strQuantity);
                if(quantity <= 0){
                    JOptionPane.showMessageDialog(this, "Please enter a valid quantity! (1 or more)");
                    return;
                }
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(this, "Please enter a number!");
                return;
            }
            
            //Get selected row's product data
            int rowSelect = tblProduct.getSelectedRow();
            String productId = (String)model.getValueAt(rowSelect, 0);
            String productName = (String)model.getValueAt(rowSelect, 1);
            Double price = Double.parseDouble((String)model.getValueAt(rowSelect, 2));
            String type = (String)model.getValueAt(rowSelect, 3);
            int stock = Integer.parseInt((String)model.getValueAt(rowSelect, 4));
            
            //Check stock amount
            if(quantity > stock){
                JOptionPane.showMessageDialog(this, "The quantity exceeded available stock!");
                return;
            }
            
            Product p;
            if(type.equals("Non-Fragile")){
                p = new NonFragileProduct(productId, productName, price);
            }else if(type.equals("Fragile")){
                p = new FragileProduct(productId, productName, price);
            }else{
                JOptionPane.showMessageDialog(this, "An unexpected error occured. Please retry.");
                return;
            }
       
            OrderItem o = new OrderItem(p, quantity);
            
            if(cart == null){
                cart = new Cart();
                cart.add(o);
            }else{
                for(int i = 0; i <cart.getCartItems().size(); i++){
                    if(cart.getCartItems().get(i).getProduct().getProductId().equals(p.getProductId())){
                        JOptionPane.showMessageDialog(this, "This item exists in cart. "
                                + "Please proceed to the cart to change the quantity or remove.");
                        return;
                    }else{
                        System.out.println(cart.getCartItems().get(i).getProduct());
                    }
                }
                cart.add(o);
            }
            
            this.dispose();
            CartView form = new CartView(customer, cart);
            form.setVisible(true);
        }
        
    }//GEN-LAST:event_btnAddToCartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductCatalogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductCatalogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductCatalogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductCatalogView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductCatalogView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnMenu;
    private javax.swing.JButton btnViewCart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduct;
    // End of variables declaration//GEN-END:variables
}
